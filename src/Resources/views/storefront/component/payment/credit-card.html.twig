{% set squarePaymentsCreditCardPluginOptions = {
    salesChannelAccessKey: context.salesChannel.accessKey,
    mode: config('SquarePayments.config.mode'),
    threeDS: config('SquarePayments.config.threeDS'),
    applicationIdSandbox: config('SquarePayments.config.applicationIdSandbox'),
    applicationIdProduction: config('SquarePayments.config.applicationIdProduction'),
    locationIdSandbox: config('SquarePayments.config.locationIdSandbox'),
    locationIdProduction: config('SquarePayments.config.locationIdProduction'),
    paymentMode : config('SquarePayments.config.paymentMode'),
    amount: page.cart.price.totalPrice ?? 0,
    currency: context.currency.shortName ?? '',
    isPaymentForm: true,
    translations: {
        cardNumberPlaceholder: ('squarepayments.credit_card.cardNumberPlaceholderText' | trans),
        cvvPlaceholder: ('squarepayments.savedCards.cvv' | trans),
        expiryDatePlaceholder: ('squarepayments.credit_card.expiryDatePlaceholderText' | trans),
        pleaseEnterValidExpirationDate: ('squarepayments.savedCards.pleaseEnterValidExpirationDate' | trans),
        monthInvalid: ('squarepayments.savedCards.monthInvalid' | trans),
        expirationDatePast: ('squarepayments.savedCards.expirationDatePast' | trans),
        cardFieldsNotLoaded: ('squarepayments.savedCards.cardFieldsNotLoaded' | trans),
        cardVerificationFailed: ('squarepayments.savedCards.cardVerificationFailed' | trans),
        paymentSetupFailed: ('squarepayments.savedCards.paymentSetupFailed' | trans),
        paymentSetupError: ('squarepayments.savedCards.paymentSetupError' | trans),
        saveCardFailed: ('squarepayments.savedCards.saveCardFailed' | trans),
        saveCardError: ('squarepayments.savedCards.saveCardError' | trans),
        authenticationFailed: ('squarepayments.savedCards.authenticationFailed' | trans),
        authenticationError: ('squarepayments.savedCards.authenticationError' | trans),
        requiredField: ('squarepayments.savedCards.requiredField' | trans),
        requiredCheckbox: ('squarepayments.savedCards.requiredCheckbox' | trans),
        processing: ('squarepayments.savedCards.processing' | trans)
    }
} %}


<div class="payment-form">
    <div class="payment-form squarepayments-credit-card">
        {% if context.customer is defined and not context.customer.guest %}
            <div id="saved-cards-section" class="form-group saved-cards-section" style="display: none">
                <label for="savedCards">{{ 'squarepayments.savedCards.savedCards' | trans }}</label>
                <select id="savedCards" class="form-select" name="savedCards">
                    <option value="new">{{ 'squarepayments.savedCards.useNewCardLabel' | trans }}</option>
                </select>
            </div>
        {% endif %}
        <div id="newCardForm">
            <div id="payment-form">
                <div id="payment-status-container"></div>
                <div id="card-container"></div>
            </div>
            {% if context.customer is defined and not context.customer.guest %}
                <div class="form-group save-card" style="display:none">
                    <input type="checkbox" id="saveCard" name="saveCard" >
                    <label for="saveCard">{{ 'squarepayments.savedCards.saveCard' | trans }}</label>
                </div>
                {% set squarePaymentsCreditCardPluginOptions = squarePaymentsCreditCardPluginOptions|merge( {
                    billing:{
                        givenName: context.customer.firstName ?? '',
                        familyName: context.customer.lastName ?? '',
                        email: context.customer.email ?? '',
                        phone: context.customer.defaultBillingAddress.phoneNumber ?? '',
                        street: context.customer.defaultBillingAddress.street ?? '',
                        addressLine1: context.customer.defaultBillingAddress.additionalAddressLine1 ?? '',
                        addressLine2: context.customer.defaultBillingAddresss.additionalAddressLine2 ?? '',
                        city: context.customer.defaultBillingAddress.city ?? '',
                        state:  context.customer.defaultBillingAddress.countryState.shortCode ?? '',
                        country: context.customer.defaultBillingAddress.country.iso ?? '',
                    }}) %}
            {% endif %}
        </div>
        <div id="step_up"></div>
    </div>
</div>
<template data-square-payments-credit-card
          data-square-payments-credit-card-options='{{ squarePaymentsCreditCardPluginOptions|json_encode|escape('html_attr') }}'></template>
<style>
    /* card list item wrapper */
    /* small helpers */
    :root {
        --card-radius: 16px;
        --card-height: 210px;
    }
    .paycard {
        position: relative;
        width: 100%;
        height: var(--card-height);
        border-radius: var(--card-radius);
        overflow: hidden;
        color: #fff;
        perspective: 1000px;
    }
    .paycard .inner {
        width: 100%;
        height: 100%;
        position: relative;
        transform-style: preserve-3d;
        transition: transform 0.6s cubic-bezier(0.2, 0.6, 0.2, 1);
    }
    .paycard .face {
        position: absolute;
        inset: 0;
        backface-visibility: hidden;
        padding: 1.1rem 1.2rem;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }
    .paycard .front {
        background: radial-gradient(120% 120% at 0% 0%, #6c5ce7 0%, #341f97 55%, #150b42 100%);
    }
    .paycard.visa .front {
        background: radial-gradient(130% 130% at 100% 0%, #0061df 0%, #012a7c 55%, #04143a 100%);
    }
    .paycard.mastercard .front {
        background: radial-gradient(130% 130% at 0% 100%, #e23b3b 0%, #c31432 45%, #240b36 100%);
    }
    .card-icon {
        width: 44px;
        height: 32px;
        border-radius: 6px;
        max-width: 35px;
        object-fit: contain;
        margin-right: 8px;
    }
    .num {
        letter-spacing: 0.12em;
        font-weight: 600;
        font-size: 1rem;
    }
    .muted {
        opacity: 0.9;
        font-size: 0.9rem;
    }
    .brand {
        display: inline-flex;
        align-items: center;
        gap: 0.4rem;
        font-weight: 700;
        letter-spacing: 0.06em;
    }
    .card-item {
        position: relative;
    }
    .mask {
        font-variant-numeric: tabular-nums;
    }
    .cursor-pointer {
        cursor: pointer;
    }

</style>